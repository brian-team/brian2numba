{% extends 'common.py_' %}

{# USES_VARIABLES { N } #}

{% block template_support_code %}

@jit
def _group_variable_get_conditional(_elements_view, {{subroutine_parameters}}):
    for _idx in range(N):
        _vectorisation_idx = _idx
        
        {{vector_code|autoindent}}
        
        if _cond:
            _elements_view[_num_elements] = _variable
            _num_elements += 1
            
    return _elements_view, _num_elements, {{subroutine_parameters}}

{% endblock %}

{% block maincode %}

    {# This is copied from the weave equivalent, seems to work but confusing #}
    {%set np_type = numpy_dtype(variables['_variable'].dtype) %}

    _vectorisation_idx = 1

    _num_elements = 0
    _elements = _numpy.zeros(N, dtype=_numpy.{{np_type}})
    _elements_view = _elements
    
    {{scalar_code|autoindent}}

    _elements_view, _num_elements, {{subroutine_parameters}} = _group_variable_get_conditional(_elements_view, {{subroutine_arguments}})
    
    return _elements[:_num_elements]

{% endblock %}
